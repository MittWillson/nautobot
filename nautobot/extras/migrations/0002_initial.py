# Generated by Django 3.2.21 on 2023-10-06 15:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import nautobot.core.models.fields
import nautobot.extras.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("extras", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="scheduledjob",
            name="approved_by_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="scheduledjob",
            name="job_model",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="scheduled_jobs",
                to="extras.job",
            ),
        ),
        migrations.AddField(
            model_name="scheduledjob",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="role",
            name="content_types",
            field=models.ManyToManyField(
                limit_choices_to=nautobot.extras.utils.RoleModelsQuery(),
                related_name="roles",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="relationshipassociation",
            name="destination_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="+", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="relationshipassociation",
            name="relationship",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="relationship_associations",
                to="extras.relationship",
            ),
        ),
        migrations.AddField(
            model_name="relationshipassociation",
            name="source_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="+", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="relationship",
            name="destination_type",
            field=models.ForeignKey(
                limit_choices_to=nautobot.extras.utils.FeatureQuery("relationships"),
                on_delete=django.db.models.deletion.CASCADE,
                related_name="destination_relationships",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="relationship",
            name="source_type",
            field=models.ForeignKey(
                limit_choices_to=nautobot.extras.utils.FeatureQuery("relationships"),
                on_delete=django.db.models.deletion.CASCADE,
                related_name="source_relationships",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="objectchange",
            name="changed_object_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="+", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="objectchange",
            name="related_object_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="objectchange",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="object_changes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="note",
            name="assigned_object_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="notes", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="note",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="notes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="jobresult",
            name="job_model",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="job_results",
                to="extras.job",
            ),
        ),
        migrations.AddField(
            model_name="jobresult",
            name="scheduled_job",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="extras.scheduledjob"
            ),
        ),
        migrations.AddField(
            model_name="jobresult",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="joblogentry",
            name="job_result",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="job_log_entries", to="extras.jobresult"
            ),
        ),
        migrations.AddField(
            model_name="jobhook",
            name="content_types",
            field=models.ManyToManyField(
                limit_choices_to=nautobot.extras.utils.ChangeLoggedModelsQuery,
                related_name="job_hooks",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="jobhook",
            name="job",
            field=models.ForeignKey(
                limit_choices_to={"is_job_hook_receiver": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="job_hooks",
                to="extras.job",
            ),
        ),
        migrations.AddField(
            model_name="jobbutton",
            name="content_types",
            field=models.ManyToManyField(related_name="job_buttons", to="contenttypes.ContentType"),
        ),
        migrations.AddField(
            model_name="jobbutton",
            name="job",
            field=models.ForeignKey(
                limit_choices_to={"is_job_button_receiver": True},
                on_delete=django.db.models.deletion.CASCADE,
                to="extras.job",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="tags",
            field=nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag"),
        ),
        migrations.AddField(
            model_name="imageattachment",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="image_attachments",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="gitrepository",
            name="secrets_group",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="git_repositories",
                to="extras.secretsgroup",
            ),
        ),
        migrations.AddField(
            model_name="gitrepository",
            name="tags",
            field=nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag"),
        ),
        migrations.AddField(
            model_name="exporttemplate",
            name="content_type",
            field=models.ForeignKey(
                limit_choices_to=nautobot.extras.utils.FeatureQuery("export_templates"),
                on_delete=django.db.models.deletion.CASCADE,
                related_name="export_templates",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="exporttemplate",
            name="owner_content_type",
            field=models.ForeignKey(
                blank=True,
                default=None,
                limit_choices_to=nautobot.extras.utils.FeatureQuery("export_template_owners"),
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="export_template_owners",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="dynamicgroupmembership",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="+", to="extras.dynamicgroup"
            ),
        ),
        migrations.AddField(
            model_name="dynamicgroupmembership",
            name="parent_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dynamic_group_memberships",
                to="extras.dynamicgroup",
            ),
        ),
        migrations.AddField(
            model_name="dynamicgroup",
            name="children",
            field=models.ManyToManyField(
                related_name="parents", through="extras.DynamicGroupMembership", to="extras.DynamicGroup"
            ),
        ),
        migrations.AddField(
            model_name="dynamicgroup",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dynamic_groups",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="customlink",
            name="content_type",
            field=models.ForeignKey(
                limit_choices_to=nautobot.extras.utils.FeatureQuery("custom_links"),
                on_delete=django.db.models.deletion.CASCADE,
                related_name="custom_links",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="customfieldchoice",
            name="custom_field",
            field=models.ForeignKey(
                limit_choices_to=models.Q(("type__in", ["select", "multi-select"])),
                on_delete=django.db.models.deletion.CASCADE,
                related_name="custom_field_choices",
                to="extras.customfield",
            ),
        ),
        migrations.AddField(
            model_name="customfield",
            name="content_types",
            field=models.ManyToManyField(
                limit_choices_to=nautobot.extras.utils.FeatureQuery("custom_fields"),
                related_name="custom_fields",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="configcontextschema",
            name="owner_content_type",
            field=models.ForeignKey(
                blank=True,
                default=None,
                limit_choices_to=nautobot.extras.utils.FeatureQuery("config_context_owners"),
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="config_context_schemas",
                to="contenttypes.contenttype",
            ),
        ),
    ]
