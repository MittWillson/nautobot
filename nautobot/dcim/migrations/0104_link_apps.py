# Generated by Django 3.2.21 on 2023-10-05 20:27

from django.db import migrations, models
import django.db.models.deletion
import nautobot.core.models.fields
import nautobot.extras.models.roles
import nautobot.extras.models.statuses
import nautobot.extras.utils


class Migration(migrations.Migration):

    initial = True

    replaces = [
        ("dcim", "0004_initial_part_4"),
        ("dcim", "0005_device_local_context_schema"),
        ("dcim", "0007_device_secrets_group"),
        ("dcim", "0010_interface_status"),
        ("dcim", "0018_device_redundancy_group"),
        ("dcim", "0019_device_redundancy_group_data_migration"),
        ("dcim", "0022_interface_redundancy_group"),
        ("dcim", "0023_interface_redundancy_group_data_migration"),
        ("dcim", "0028_alter_device_and_rack_role_add_new_role"),
        ("dcim", "0029_device_and_rack_roles_data_migrations"),
        ("dcim", "0030_rename_device_and_rack_role"),
        ("dcim", "0031_remove_device_role_and_rack_role"),
        ("dcim", "0033_add_tree_managers_and_foreign_keys_pre_data_migration"),
        ("dcim", "0034_migrate_region_and_site_data_to_locations"),
        ("dcim", "0035_rename_path_end_point_related_name"),
        ("dcim", "0040_remove_region_and_site"),
        ("dcim", "0041_interface_ip_addresses_m2m"),
        ("dcim", "0044_tagsfield"),
        ("dcim", "0045_ipam__namespaces"),
        ("dcim", "0046_fixup_null_statuses"),
        ("dcim", "0047_status_nonnullable"),
    ]

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('ipam', '0102_link_apps'),
        ('virtualization', '0101_squashed'),
        ('tenancy', '0101_squashed'),
        ('dcim', '0103_link_apps'),
        ('extras', '0102_link_apps'),
    ]

    operations = [
        migrations.AddField(
            model_name='device',
            name='cluster',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='virtualization.cluster'),
        ),
        migrations.AddField(
            model_name='device',
            name='device_redundancy_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='dcim.deviceredundancygroup'),
        ),
        migrations.AddField(
            model_name='device',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='device',
            name='local_config_context_data_owner_content_type',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(blank=True, default=None, limit_choices_to=nautobot.extras.utils.FeatureQuery('config_context_owners'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='device',
            name='local_config_context_schema',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='extras.configcontextschema'),
        ),
        migrations.AddField(
            model_name='device',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='dcim.location'),
        ),
        migrations.AddField(
            model_name='device',
            name='platform',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='dcim.platform'),
        ),
        migrations.AddField(
            model_name='device',
            name='primary_ip4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_ip4_for', to='ipam.ipaddress'),
        ),
        migrations.AddField(
            model_name='device',
            name='primary_ip6',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_ip6_for', to='ipam.ipaddress'),
        ),
        migrations.AddField(
            model_name='device',
            name='rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='dcim.rack'),
        ),
        migrations.AddField(
            model_name='device',
            name='role',
            field=nautobot.extras.models.roles.RoleField(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='extras.role'),
        ),
        migrations.AddField(
            model_name='device',
            name='secrets_group',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='extras.secretsgroup'),
        ),
        migrations.AddField(
            model_name='device',
            name='status',
            field=nautobot.extras.models.statuses.StatusField(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='extras.status'),
        ),
        migrations.AddField(
            model_name='device',
            name='tags',
            field=nautobot.core.models.fields.TagsField(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='device',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='device',
            name='virtual_chassis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='dcim.virtualchassis'),
        ),
        migrations.AddField(
            model_name='consoleserverporttemplate',
            name='device_type',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(on_delete=django.db.models.deletion.CASCADE, related_name='console_server_port_templates', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='consoleserverport',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='consoleserverport',
            name='_path',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='console_server_ports', to='dcim.cablepath'),
        ),
        migrations.AddField(
            model_name='consoleserverport',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='consoleserverport',
            name='device',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(on_delete=django.db.models.deletion.CASCADE, related_name='console_server_ports', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='consoleserverport',
            name='tags',
            field=nautobot.core.models.fields.TagsField(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='consoleporttemplate',
            name='device_type',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(on_delete=django.db.models.deletion.CASCADE, related_name='console_port_templates', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='consoleport',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='consoleport',
            name='_path',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='console_ports', to='dcim.cablepath'),
        ),
        migrations.AddField(
            model_name='consoleport',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='consoleport',
            name='device',
            field=nautobot.core.models.fields.ForeignKeyWithAutoRelatedName(on_delete=django.db.models.deletion.CASCADE, related_name='console_ports', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='consoleport',
            name='tags',
            field=nautobot.core.models.fields.TagsField(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='cablepath',
            name='destination_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='cablepath',
            name='origin_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='cable',
            name='_termination_a_device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='cable',
            name='_termination_b_device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='cable',
            name='status',
            field=nautobot.extras.models.statuses.StatusField(on_delete=django.db.models.deletion.PROTECT, related_name='cables', to='extras.status'),
        ),
        migrations.AddField(
            model_name='cable',
            name='tags',
            field=nautobot.core.models.fields.TagsField(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='cable',
            name='termination_a_type',
            field=models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'circuits'), ('model__in', ('circuittermination',))), models.Q(('app_label', 'dcim'), ('model__in', ('consoleport', 'consoleserverport', 'frontport', 'interface', 'powerfeed', 'poweroutlet', 'powerport', 'rearport'))), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='cable',
            name='termination_b_type',
            field=models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'circuits'), ('model__in', ('circuittermination',))), models.Q(('app_label', 'dcim'), ('model__in', ('consoleport', 'consoleserverport', 'frontport', 'interface', 'powerfeed', 'poweroutlet', 'powerport', 'rearport'))), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AlterUniqueTogether(
            name='rearporttemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='rearport',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='rackgroup',
            unique_together={('location', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='rack',
            unique_together={('rack_group', 'name'), ('rack_group', 'facility_id')},
        ),
        migrations.AlterUniqueTogether(
            name='powerporttemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='powerport',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='powerpanel',
            unique_together={('location', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='poweroutlettemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='poweroutlet',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='powerfeed',
            unique_together={('power_panel', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together={('parent', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='inventoryitem',
            unique_together={('device', 'parent', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='interfacetemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='interfaceredundancygroupassociation',
            unique_together={('interface_redundancy_group', 'interface')},
        ),
        migrations.AlterUniqueTogether(
            name='interface',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='frontporttemplate',
            unique_together={('device_type', 'name'), ('rear_port_template', 'rear_port_position')},
        ),
        migrations.AlterUniqueTogether(
            name='frontport',
            unique_together={('device', 'name'), ('rear_port', 'rear_port_position')},
        ),
        migrations.AlterUniqueTogether(
            name='devicetype',
            unique_together={('manufacturer', 'model')},
        ),
        migrations.AlterUniqueTogether(
            name='devicebaytemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='devicebay',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together={('virtual_chassis', 'vc_position'), ('rack', 'position', 'face'), ('location', 'tenant', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='consoleserverporttemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='consoleserverport',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='consoleporttemplate',
            unique_together={('device_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='consoleport',
            unique_together={('device', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='cablepath',
            unique_together={('origin_type', 'origin_id')},
        ),
        migrations.AlterUniqueTogether(
            name='cable',
            unique_together={('termination_b_type', 'termination_b_id'), ('termination_a_type', 'termination_a_id')},
        ),
    ]
